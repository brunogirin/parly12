{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"Parly12","tagline":"Hack for Rewired State Parliament 2012","body":"Rewired State Parliament 2012 Hack\r\n==================================\r\n\r\nThe Brief\r\n---------\r\n\r\nThis is a simple [django](https://www.djangoproject.com/) application\r\ncreated for [Rewired State Parliament 2012](http://rewiredstate.org/hacks/parliament-2012)\r\nthat generates graphs from voting behavour by British Members of Parliament\r\nheld in a database. I worked with\r\n[Charlie Perrins](http://twitter.com/charlieperrins) who came up with the\r\noriginal idea and collated all source data; and\r\n[Ela Osterberger](http://twitter.com/CuteNumbers) who did some brilliant\r\nanalytics work. Full details and a presentation of the hack\r\n[are available on the Rewired State hack page](http://hacks.rewiredstate.org/events/parlyhack-2012/mps-legislative-rainy-day-fun-pack).\r\n\r\n![Application screen shot](http://brunogirin.github.com/parly12/images/screenshot.png)\r\n\r\nUsage\r\n-----\r\n\r\nIn order to run the application, unpack everything, install django then\r\nnavigate to the `parly2012` directory in a terminal and run the following:\r\n\r\n    ./manage.py collectstatic\r\n    ./manage.py syncdb\r\n    ./manage.py runserver\r\n\r\nThis will start a lightweight web server that you will be able to access at\r\nthe following URL: <http://localhost:8000>\r\n\r\nYou will first be presented with a page that asks you to load the data set.\r\nNote that loading the full data set takes quite a long time.\r\n\r\nTake Away\r\n---------\r\n\r\nAs ever with with hack days, there was the opportunity to learn new things,\r\nsome of those are implemented in the code:\r\n* How to [execute custom SQL in django](https://docs.djangoproject.com/en/dev/topics/db/sql/#executing-custom-sql-directly);\r\n* How to [create inline SVG in HTML5](http://www.w3schools.com/html/html5_svg.asp)\r\nand generate it in a django template.\r\n\r\nThe hack does interesting stuff but is limited by the fact that the data is\r\nheld in a SQL database. More interesting graphs could probably be generated by\r\nusing a no-SQL database such as [riak](http://wiki.basho.com/) or by using\r\na statistical language such as [R](http://www.r-project.org/), which were\r\ninvestigated but discarded as too complicated due to time constraints:\r\n* How to [embed R code in python](http://rpy.sourceforge.net/);\r\n* How to [call Riak from django](https://github.com/basho/riak-python-client).\r\n\r\nLicense\r\n-------\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\nany later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n"}